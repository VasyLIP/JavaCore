package chapter14;


public class RawDemo {
    // Продемонстрировать базовый тип class Gen<T> {
    static class Gen<T>{

        T ob; // объявить объект типа Т

        // передать конструктору ссылку на объект типа Т
        Gen(T o) {
            ob = o;
        }

        // возвратить объект оЬ
        T getob(){
            return ob;
        }
    }

    // Продемонстрировать применение базового типа
    public static void main(String[] args) {
        // создать объект типа Gen для целых чисел
        Gen<Integer> iOb = new Gen<Integer>(88);

        // создать объект типа Gen для символьных строк
        Gen<String> strOb = new Gen<String>("Tecт обобщений");

        // создать объект базового типа Gen и присвоить ему
        // значение типа DouЫe
        Gen raw = new Gen(new Double(98.6));

        // Требуется приведение типов, поскольку тип неизвестен
        double d = (Double) raw.getob();
        System.out.println("Знaчeниe: " + d);

        /*
        Прииенение 6азовых типов может вызвать исключения во
        время выполнения . Ниже представлены некоторые тому примеры .
        Следующее приведение типов вызовет ошибку в о время выполнения !
        int i = (Integer) raw.getob(); // ОШИБКА во время выполнения!
         */

        // Следующее присваивание наруwает типовую безопасность
        strOb = raw ; // Верно, но потенциально ошибочно
        // Sting str = strOb.getob(); // ОШИБКА во время выполнения!
/**
 * объект raw содержит значение типа Double вместо целочисленного значения
 */
        // Следующее присваивание также наруп�ает типовую безопасность
        raw = iOb; // Верно, но потенциально ошибочно
        // d = (Double) raw.getob(); // ОШИБКА во время выполнения!









    }
}
