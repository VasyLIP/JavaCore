package chapter04;/*
Следующая программа создает несколько целочисленных переменных,
а затем использует составные побитовые операторы с присваиванием для манипулирования этими переменными

Этот класс на Java, OpBitEquals, демонстрирует использование различных битовых операторов присваивания на примере трёх переменных a, b, и c
 */

public class OpBitEquals {
    public static void main(String[] args) {
        int a = 1; // переменная a инициализируется значением 1
        int b = 2;
        int c = 3;
        a |= 4; // к переменной a применяется оператор ИЛИ с присваиванием (|=) с числом 4. В двоичной форме это будет: 0001 | 0100 = 0101, что в десятичной системе равно 5.
        b >>= 1; // переменная b сдвигается вправо на один бит с присваиванием (>>=). Это деление на 2, поэтому результат будет 1 (0010 >> 1 = 0001).
        c <<= 1; // переменная c сдвигается влево на один бит с присваиванием (<<=). Это умножение на 2, поэтому результат будет 6 (0011 << 1 = 0110).
        a ^= c; // к переменной a применяется оператор исключающего ИЛИ с присваиванием (^=) с переменной c. Рассчитаем: 0101 ^ 0110 = 0011, что в десятичной системе равно 3.

        System.out.println(" a = " + a);
        System.out.println(" b = " + b);
        System.out.println(" c = " + c);
    }
}
