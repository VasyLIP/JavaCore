Класс EnumSet расширяет класс AbstractSet и реализует интерфейс Set. Он предназначен для создания
    множества, специально предназначенного для работы с элементами перечислимого типа (enum).
    Этот класс является обобщенным и объявляется следующим образом:
        class EnumSet<E extends Enum<E>>, где E обозначает элементы перечислимого типа. Класс E должен
            расширять Enum<E>, то есть элементы должны принадлежать к указанному перечислимому типу.
    Основные характеристики:
        - Оптимизирован для enum: EnumSet оптимизирован для работы с перечислениями, что делает
            его эффективным по памяти и производительности.
        - Высокая производительность: Операции добавления, удаления и проверки наличия элементов
            выполняются очень быстро.
    Конструкторы:
        - static <E extends Enum<E>> EnumSet<E> allOf(Class<E> elementType) - Создает множество типа EnumSet,
            содержащее все элементы заданного перечисления elementType.
        - static <E extends Enum<E>> EnumSet<E> complementOf(EnumSet<E> s) - Создает множество типа EnumSet,
            содержащее элементы, отсутствующие в заданном множестве s.
        - static <E extends Enum<E>> EnumSet<E> copyOf(Enum<E> s) - Создает множество типа EnumSet,
            содержащее элементы из заданного множества s
        - static <E extends Enum<E>> EnumSet<E> copyOf(Collection<E> c) - Создает множество типа EnumSet,
            содержащее элементы из заданной коллекции c
        - static <E extends Enum<E>> EnumSet<E> noneOf(Class<E> elementType) - Создает пустое множество типа EnumSet
            для заданного перечисления elementType.
        - static <E extends Enum<E>> EnumSet<E> of(E e) -  Создает множество типа EnumSet, содержащее единственный элемент e.
        - static <E extends Enum<E>> EnumSet<E> of(E e1, E e2, E e3) - Создает множество типа EnumSet, содержащее элементы e1 и e2.

Класс EnumSet в Java предоставляет эффективный и удобный способ работы с множествами элементов
    перечислимого типа. Он оптимизирован для производительности и экономии памяти, предоставляя
    различные фабричные методы для создания и управления множествами. EnumSet особенно полезен,
    когда нужно работать с фиксированным набором значений, таких как перечисления.