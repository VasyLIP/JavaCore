Класс LinkedList в Java:
    Класс LinkedList расширяет класс AbstractSequentialList и реализует интерфейсы
        List, Deque и Queue. Это обобщенный класс, объявленный следующим образом:
        class LinkedList<E>, где E обозначает тип сохраняемых в списке объектов;

    Конструкторы:
        - LinkedList(): Создает пустой связный список;
        - LinkedList(Collection <? extends E> c): Создает связный список и
            инициализирует его содержимым коллекции c;

    Методы класса LinkedList:
        Так как LinkedList реализует интерфейс Deque, он поддерживает методы для
            работы с элементами в начале и конце списка:
        Добавление элементов:
            - addFirst(E e), offerFirst(E e) -- добавляет элемент в начало списка.
            - addLast(E e), offerLast(E e) -- добавляет элемент в конец списка.

        Получение элементов:
            - getFirst(), peekFirst() - возвращает первый элемент списка.
            - getLast(), peekLast() - возвращает последний элемент списка.

        Удаление элементов:
            - removeFirst(), pollFirst() -- удаляет и возвращает первый элемент списка.
            - removeLast(), peekLast() -- удаляет и возвращает последний элемент списка.

        Особенности класса LinkedList
            - Гибкость: LinkedList поддерживает операции вставки и удаления как в
                начале, так и в конце списка.
            - Динамическая емкость: Размер списка может изменяться динамически.
            - Интерфейсы: Реализация интерфейсов List, Deque и Queue позволяет
                использовать LinkedList как список, очередь и двустороннюю очередь.

Класс LinkedList в Java предоставляет гибкую структуру данных для работы со списками.
    Он поддерживает все основные операции добавления, удаления и получения элементов,
    как в начале, так и в конце списка, что делает его удобным для реализации
    различных алгоритмов и структур данных.